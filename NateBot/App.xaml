<Application x:Class="NateBot.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:NateBot"
             Startup="Application_Startup"
             Exit="Application_Exit">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <local:TextBoxInputBehavior x:Key="TextBoxInput"/>


        <SolidColorBrush x:Key="Dark" Color="#FF323232"/>
        <SolidColorBrush x:Key="Darker" Color="#FF262626"/>
        <SolidColorBrush x:Key="Darkist" Color="#FF202020"/>
        
        <Style TargetType="Grid" x:Key="Grid0">
            <Setter Property="Background" Value="#FF323232"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
        </Style>

        <Style TargetType="TextBlock" x:Key="textBox">
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="DockPanel.Dock" Value="Left"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>

        <Style TargetType="TextBox" x:Key="inputBox">
            <Setter Property="Background" Value="#FF323232"/>
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="DockPanel.Dock" Value="Right"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Darkist}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="{StaticResource Darker}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button"  x:Key="btnTmp">
            <Setter Property="Foreground" Value="DimGray"/>
            <Setter Property="Background" Value="#FF323232"/>
            <Setter Property="BorderBrush" Value="{StaticResource Darker}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}" x:Key="togBtn">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="Background" Value="{StaticResource Darker}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="GhostWhite" />
                    <Setter Property="Foreground" Value="{StaticResource Darker}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="GhostWhite"/>
                    <Setter Property="Foreground" Value="{StaticResource Darker}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListBox" x:Key="lisBox">
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="Background" Value="#FF323232"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="MinHeight" Value="24"/>
            <Setter Property="MaxHeight" Value="96"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        </Style>

        <Style TargetType="ComboBox" x:Key="comBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="MaxHeight" Value="24"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
        </Style>
    </Application.Resources>
</Application>
